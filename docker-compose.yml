<<<<<<< HEAD
version: '3.8'

services:
  web:
    build: .
=======
version: "3.8"

services:
  web:
    build: ./app
>>>>>>> 27dccbc (Update: Improved UI, sidebar nav, smooth scroll, and Docker setup)
    ports:
      - "5000:5000"
    depends_on:
      - db
    environment:
<<<<<<< HEAD
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
=======
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
>>>>>>> 27dccbc (Update: Improved UI, sidebar nav, smooth scroll, and Docker setup)
    restart: always

  db:
    image: postgres:latest
    environment:
<<<<<<< HEAD
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
=======
      POSTGRES_DB: mydb
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
>>>>>>> 27dccbc (Update: Improved UI, sidebar nav, smooth scroll, and Docker setup)
    restart: always

  frontend:
    build: ./frontend
    ports:
      - "3000:80"
    depends_on:
      - web
    restart: always

volumes:
  postgres_data:
<<<<<<< HEAD

=======
>>>>>>> 27dccbc (Update: Improved UI, sidebar nav, smooth scroll, and Docker setup)
